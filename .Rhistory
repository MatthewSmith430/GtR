"Glasgow Caledonian University",
"Glasgow School of Art",
"University of Glasgow",
"University of Gloucestershire",
"Glyndwr University",
"Goldsmiths College",
"University of Greenwich",
"Guildhall School of Music and Drama",
"Harper Adams University",
"Heriot-Watt University",
"University of Hertfordshire",
"University of Huddersfield",
"University of Hull",
"Imperial College London",
"Keele University",
"University of Kent",
"King's College London",
"Kingston University",
"Lancaster University",
"Leeds Beckett University",
"University of Leeds",
"Leeds Trinity University",
"University of Leicester",
"University of Lincoln",
"Liverpool Hope University",
"Liverpool John Moores University",
"University of Liverpool",
"Liverpool School of Tropical Medicine",
"University of the Arts London",
"London Business School",
"University of London",
"London Metropolitan University",
"London South Bank University",
"London School of Economics & Pol Sci",
"London Sch of Hygiene and Trop Medicine",
"Loughborough University",
"Manchester Metropolitan University",
"University of Manchester",
"Middlesex University",
"Newcastle University",
"University of Northampton",
"Northumbria University",
"Norwich University of the Arts",
"University of Nottingham",
"Nottingham Trent University",
"Open University",
"Oxford Brookes University",
"University of Oxford",
"Plymouth College of Art and Design",
"University of Plymouth",
"University of Portsmouth",
"Queen Margaret University Edinburgh",
"Queen Mary, University of London",
"University of Reading",
"The Robert Gordon University",
"Roehampton University",
"Royal Academy of Music",
"Royal Agricultural University (RAU)",
"Royal College of Art",
"Royal College of Music (RCM)",
"Royal Conservatoire of Scotland",
"Royal Central School of Speech and Drama",
"Royal Holloway College and Bedford New College",
"Royal Northern College of Music",
"Royal Veterinary College",
"University of St Andrews",
"St George's University of London",
"St Mary's University, Twickenham",
"University of Salford",
"School of Oriental & African Studies",
"SRUC",
"Sheffield Hallam University",
"University of Sheffield",
"Southampton Solent University",
"University of Southampton",
"Staffordshire University",
"University of Stirling",
"University of Strathclyde",
"University of Suffolk",
"University of Sunderland",
"University of Surrey",
"University of Sussex",
"Swansea University",
"University of Teesside",
"Trinity Laban Conservatoire of Music and Dance",
"University of Wales Trinity Saint David",
"University of the Highlands and Islands",
"University of Ulster",
"University College London",
"University of South Wales",
"University of Warwick",
"University of the West of England",
"University of the West of Scotland",
"University of West London",
"University of Westminster",
"University of Winchester",
"University of Wolverhampton",
"University of Worcester",
"Writtle College",
"York St John University",
"University of York")
R1<-c(0, 0, 0, 0, 0, 0, 0, 0, 0,
1, 0, 0, 1, 0, 0, 0, 0, 0, 0,
1, 0, 0, 0, 1, 0, 0, 1, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 1, 0, 0, 0, 0, 1, 0, 1,
0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 1, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 0, 0, 1, 0,
0, 0, 0, 0, 0, 1, 0, 0, 0, 1,
0, 1, 0, 0, 0, 1, 0, 0, 0, 1,
0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0,
0, 0, 0, 0, 0, 0, 0, 0, 1)
ATTR_DF<-data.frame(name=U1,russell_group=R1,
uni=rep(1,length(U1)))
DF5<-merge(DF4,ATTR_DF,by.x="org",by.y="name",all.x=TRUE,all.y=FALSE)
DF5$russell_group[is.na(DF5$russell_group)]<-0
DF5$uni[is.na(DF5$uni)]<-0
UNIORG<-table(DF5$uni)
UO_DF<-as.data.frame(UNIORG)
NUM_ORG<-dplyr::filter(UO_DF,Var1==0)
NUM_ORG<-NUM_ORG$Freq
OC<-purrr::is_empty(NUM_ORG)
if (OC==TRUE){
NUM_ORG<-0
}else{
NUM_ORG<-NUM_ORG
}
NUM_UNI<-dplyr::filter(UO_DF,Var1==1)
NUM_UNI<-NUM_UNI$Freq
UC<-purrr::is_empty(NUM_UNI)
if (UC==TRUE){
NUM_UNI<-0
}else{
NUM_UNI<-NUM_UNI
}
TOTAL_ORG<-NUM_ORG+NUM_UNI
PROP_ORG<-NUM_ORG/TOTAL_ORG
PROP_UNI<-NUM_UNI/TOTAL_ORG
####Russell Group Lead org
LEAD_CHECK<-dplyr::filter(DF5,org_role=="LEAD_RO")
LEAD_LEN<-length(LEAD_CHECK$org)
if (LEAD_LEN==0){
LEAD_R<-0
}else{
LEAD_R<-LEAD_CHECK$russell_group[[1]]
}
DF6<-dplyr::mutate(DF5,
number_org=rep(NUM_ORG,length(DF5$org)),
number_uni=rep(NUM_UNI,length(DF5$org)),
prop_org=rep(PROP_ORG,length(DF5$org)),
prop_uni=rep(PROP_UNI,length(DF5$org)),
total_players=rep(TOTAL_ORG,length(DF5$org)),
lead_org_russell=rep(LEAD_R,length(DF5$org))
)
DF6<-unique(DF6)
library(GtR)
url<-"https://gtr.ukri.org:443/projects?ref=EP/N021479/1"
firmTEST<-httr::GET(url)
firmTEXT<-httr::content(firmTEST, as="text")
JLfirm<-jsonlite::fromJSON(firmTEXT, flatten=TRUE)
ORG<-JLfirm$projectOverview$projectComposition
pt<-ORG$project$title
pti<-ORG$project$id
imp<-ORG$project$output
imp_df<-purrr::map_df(imp,data.frame)
purrr::is_empty(imp_df)
imp_df<-dplyr::mutate(project=pt,project_id=pti)
pti<-ORG$project$id
View(imp_df)
imp_df<-dplyr::mutate(imp_df,project=pt,project_id=pti)
gc()
library(GtR)
library(GtR)
url<-"https://gtr.ukri.org:443/projects?ref=EP/K000446/1"
firmTEST<-httr::GET(url)
firmTEXT<-httr::content(firmTEST, as="text")
JLfirm<-jsonlite::fromJSON(firmTEXT, flatten=TRUE)
PUB_DF<-gtr_pub_df(url)
library(GtR)
PUB_DF<-gtr_pub_df(url)
TEST<-dplyr::ungroup(PUB_DF)
project_id<-unique(TEST$project_id)
View(TEST)
View(PUB_DF)
TOT<-sum(TEST$freq_per_year)
library(GtR)
url<-"https://gtr.ukri.org:443/projects?ref=EP/K000446/1"
library(GtR)
IP_DATA<-gtr_ip(url)
firmTEST<-httr::GET(url)
firmTEXT<-httr::content(firmTEST, as="text")
JLfirm<-jsonlite::fromJSON(firmTEXT, flatten=TRUE)
ORG<-JLfirm$projectOverview$projectComposition
proj_id<-ORG$project$grantReference
imp<-ORG$project$output
ip_df<-imp$intellectualPropertyOutput
ip_df<-dplyr::mutate(ip_df,project_id=proj_id,
ip_category=protection)
imp<-ORG$project$output
View(imp)
ip_df<-imp$intellectualPropertyOutput
library(purrr)
CHECK<-purrr::is_empty(ip_df)
firmTEST<-httr::GET(url)
firmTEXT<-httr::content(firmTEST, as="text")
JLfirm<-jsonlite::fromJSON(firmTEXT, flatten=TRUE)
ORG<-JLfirm$projectOverview$projectComposition
proj_id<-ORG$project$grantReference
imp<-ORG$project$output
ip_df<-imp$intellectualPropertyOutput
CHECK<-purrr::is_empty(ip_df)
if (CHECK==TRUE){
ip_df<-data.frame(project_id=proj_id,
ip_category=NA,
description=NA,
protection=NA,
yearProtectionGranted=NA,
licensed=NA,
patent_id=NA)
}else{
ip_df<-dplyr::mutate(ip_df,project_id=proj_id,
ip_category=protection)
patent_id<-ip_df$patentId
HHH<-colnames(ip_df)
YC<-"yearProtectionGranted" %in% HHH
LEN<-length(ip_df$id)
NA_info<-rep(NA,LEN)
if (YC==FALSE){
ip_df<-dplyr::mutate(ip_df,yearProtectionGranted=NA_info)
}else{
ip_df<-ip_df
}
DC<-"description"%in%HHH
if (DC==FALSE){
ip_df<-dplyr::mutate(ip_df,description=NA_info)
}else{
ip_df<-ip_df
}
ip_df<-dplyr::select(ip_df,project_id,ip_category,
description,protection,yearProtectionGranted,
licensed)
PC<-purrr::is_empty(patent_id)
if (PC==TRUE){
patent_id_data<-rep(NA,length(ip_df$project_id))
}else{
patent_id_data<-patent_id
}
ip_df<-dplyr::mutate(ip_df,patent_id=patent_id_data)
}
View(ip_df)
library(GtR)
library(GtR)
url<-"https://gtr.ukri.org:443/projects?ref=EP/K000446/1"
IP_DATA<-gtr_ip(url)
View(IP_DATA)
CHECK<-is.na(IP_DATA$ip_category)
library(GtR)
url<-"https://gtr.ukri.org:443/projects?ref=EP/P010237/1"
library(GtR)
PUB_DF<-gtr_pub_df(url)
firmTEST<-httr::GET(url)
firmTEXT<-httr::content(firmTEST, as="text")
JLfirm<-jsonlite::fromJSON(firmTEXT, flatten=TRUE)
ORG<-JLfirm$projectOverview$projectComposition
proj_id<-ORG$project$grantReference
pt<-ORG$project$title
imp<-ORG$project$output
PUB<-ORG$project$publication
PUB2<-dplyr::filter(PUB,!is.na(parentPublicationTitle))
View(PUB)
url
COL_PUB<-colnames(PUB)
COL_PUB<- "parentPublicationTitle" %in% colnames(PUB)
PUB$date
YL<-lubridate::year(PUB$date)
YL2<-table(YL)
YL2<-as.vector(table(YL))
firmTEST<-httr::GET(url)
firmTEXT<-httr::content(firmTEST, as="text")
JLfirm<-jsonlite::fromJSON(firmTEXT, flatten=TRUE)
ORG<-JLfirm$projectOverview$projectComposition
proj_id<-ORG$project$grantReference
pt<-ORG$project$title
imp<-ORG$project$output
PUB<-ORG$project$publication
COL_PUB<- "parentPublicationTitle" %in% colnames(PUB)
if (COL_PUB==FALSE){
PUB<-dplyr::mutate(PUB,is.na(parentPublicationTitle))
}else{
PUB2<-dplyr::filter(PUB,!is.na(parentPublicationTitle))
PUB3<-dplyr::select(PUB2,parentPublicationTitle,date)
PUB4<-dplyr::mutate(PUB3,year=lubridate::year(PUB3$date))
PUB5<-dplyr::group_by(PUB4,parentPublicationTitle,year)
PUB6<-dplyr::rename(dplyr::count(PUB5, parentPublicationTitle,year), Freq = n)
PUB7<-dplyr::mutate(PUB6,project_id=proj_id)
colnames(PUB7)<-c("Title","year","freq_per_year","project_id")
PUB8<-dplyr::select(PUB7,project_id,Title,year,freq_per_year)
PUB8$Title<-tolower(PUB8$Title)
PUB8$Title<-gsub("&","and",PUB8$Title)
JOURNAL_DATA<-base::get("JOURNAL_DATA")
PUB9<-dplyr::left_join(PUB8,JOURNAL_DATA, by=c("Title","year"))
PUB10<-dplyr::mutate(PUB9,SJR_mult_freq=SJR*freq_per_year)
PUB11<-dplyr::mutate(PUB10,H_index_mult_freq=H_index*freq_per_year)
}
firmTEST<-httr::GET(url)
firmTEXT<-httr::content(firmTEST, as="text")
JLfirm<-jsonlite::fromJSON(firmTEXT, flatten=TRUE)
ORG<-JLfirm$projectOverview$projectComposition
proj_id<-ORG$project$grantReference
pt<-ORG$project$title
imp<-ORG$project$output
PUB<-ORG$project$publication
COL_PUB<- "parentPublicationTitle" %in% colnames(PUB)
if (COL_PUB==FALSE){
PUB<-dplyr::mutate(PUB,parentPublicationTitle=NA)
}else{
PUB2<-dplyr::filter(PUB,!is.na(parentPublicationTitle))
PUB3<-dplyr::select(PUB2,parentPublicationTitle,date)
PUB4<-dplyr::mutate(PUB3,year=lubridate::year(PUB3$date))
PUB5<-dplyr::group_by(PUB4,parentPublicationTitle,year)
PUB6<-dplyr::rename(dplyr::count(PUB5, parentPublicationTitle,year), Freq = n)
PUB7<-dplyr::mutate(PUB6,project_id=proj_id)
colnames(PUB7)<-c("Title","year","freq_per_year","project_id")
PUB8<-dplyr::select(PUB7,project_id,Title,year,freq_per_year)
PUB8$Title<-tolower(PUB8$Title)
PUB8$Title<-gsub("&","and",PUB8$Title)
JOURNAL_DATA<-base::get("JOURNAL_DATA")
PUB9<-dplyr::left_join(PUB8,JOURNAL_DATA, by=c("Title","year"))
PUB10<-dplyr::mutate(PUB9,SJR_mult_freq=SJR*freq_per_year)
PUB11<-dplyr::mutate(PUB10,H_index_mult_freq=H_index*freq_per_year)
}
firmTEST<-httr::GET(url)
firmTEXT<-httr::content(firmTEST, as="text")
JLfirm<-jsonlite::fromJSON(firmTEXT, flatten=TRUE)
ORG<-JLfirm$projectOverview$projectComposition
proj_id<-ORG$project$grantReference
pt<-ORG$project$title
imp<-ORG$project$output
PUB<-ORG$project$publication
COL_PUB<- "parentPublicationTitle" %in% colnames(PUB)
if (COL_PUB==FALSE){
PUB<-dplyr::mutate(PUB,parentPublicationTitle=NA)
}else{PUB<-PUB}
PUB2<-dplyr::filter(PUB,!is.na(parentPublicationTitle))
PUB3<-dplyr::select(PUB2,parentPublicationTitle,date)
PUB4<-dplyr::mutate(PUB3,year=lubridate::year(PUB3$date))
PUB5<-dplyr::group_by(PUB4,parentPublicationTitle,year)
PUB6<-dplyr::rename(dplyr::count(PUB5, parentPublicationTitle,year), Freq = n)
PUB7<-dplyr::mutate(PUB6,project_id=proj_id)
colnames(PUB7)<-c("Title","year","freq_per_year","project_id")
PUB8<-dplyr::select(PUB7,project_id,Title,year,freq_per_year)
PUB8$Title<-tolower(PUB8$Title)
PUB8$Title<-gsub("&","and",PUB8$Title)
JOURNAL_DATA<-base::get("JOURNAL_DATA")
PUB9<-dplyr::left_join(PUB8,JOURNAL_DATA, by=c("Title","year"))
PUB10<-dplyr::mutate(PUB9,SJR_mult_freq=SJR*freq_per_year)
PUB11<-dplyr::mutate(PUB10,H_index_mult_freq=H_index*freq_per_year)
View(PUB11)
length(PUB11$project_id)==0
colnames(PUB11)
PUB11$project_id<-proj_id
View(PUB11)
firmTEST<-httr::GET(url)
firmTEXT<-httr::content(firmTEST, as="text")
JLfirm<-jsonlite::fromJSON(firmTEXT, flatten=TRUE)
ORG<-JLfirm$projectOverview$projectComposition
proj_id<-ORG$project$grantReference
pt<-ORG$project$title
imp<-ORG$project$output
PUB<-ORG$project$publication
COL_PUB<- "parentPublicationTitle" %in% colnames(PUB)
if (COL_PUB==FALSE){
PUB<-dplyr::mutate(PUB,parentPublicationTitle=NA)
}else{PUB<-PUB}
PUB2<-dplyr::filter(PUB,!is.na(parentPublicationTitle))
PUB3<-dplyr::select(PUB2,parentPublicationTitle,date)
PUB4<-dplyr::mutate(PUB3,year=lubridate::year(PUB3$date))
PUB5<-dplyr::group_by(PUB4,parentPublicationTitle,year)
PUB6<-dplyr::rename(dplyr::count(PUB5, parentPublicationTitle,year), Freq = n)
PUB7<-dplyr::mutate(PUB6,project_id=proj_id)
colnames(PUB7)<-c("Title","year","freq_per_year","project_id")
PUB8<-dplyr::select(PUB7,project_id,Title,year,freq_per_year)
PUB8$Title<-tolower(PUB8$Title)
PUB8$Title<-gsub("&","and",PUB8$Title)
JOURNAL_DATA<-base::get("JOURNAL_DATA")
PUB9<-dplyr::left_join(PUB8,JOURNAL_DATA, by=c("Title","year"))
PUB10<-dplyr::mutate(PUB9,SJR_mult_freq=SJR*freq_per_year)
PUB11<-dplyr::mutate(PUB10,H_index_mult_freq=H_index*freq_per_year)
if (length(PUB11$project_id)==0){
PUB11<-data.frame(project_id=proj_id,
Title=NA,
year=NA,
freq_per_year=0,
H_index=0,
SJR=0,
SJR_mult_freq=0,
H_index_mult_freq=0)
}else{
PUB11<-PUB11
}
View(PUB11)
gc()
library(GtR)
url<-"https://gtr.ukri.org:443/projects?ref=ST/L00626X/1"
firmTEST<-httr::GET(url)
firmTEXT<-httr::content(firmTEST, as="text")
JLfirm<-jsonlite::fromJSON(firmTEXT, flatten=TRUE)
ORG<-JLfirm$projectOverview$projectComposition
proj_id<-ORG$project$grantReference
pt<-ORG$project$title
imp<-ORG$project$output
PUB<-ORG$project$publication
EMP<-purrr::is_empty(PUB)
firmTEST<-httr::GET(url)
firmTEXT<-httr::content(firmTEST, as="text")
JLfirm<-jsonlite::fromJSON(firmTEXT, flatten=TRUE)
ORG<-JLfirm$projectOverview$projectComposition
proj_id<-ORG$project$grantReference
pt<-ORG$project$title
imp<-ORG$project$output
PUB<-ORG$project$publication
COL_PUB<- "parentPublicationTitle" %in% colnames(PUB)
EMP<-purrr::is_empty(PUB)
if (COL_PUB==FALSE& EMP==FALSE){
PUB<-dplyr::mutate(PUB,parentPublicationTitle=NA)
PUB2<-dplyr::filter(PUB,!is.na(parentPublicationTitle))
PUB3<-dplyr::select(PUB2,parentPublicationTitle,date)
PUB4<-dplyr::mutate(PUB3,year=lubridate::year(PUB3$date))
PUB5<-dplyr::group_by(PUB4,parentPublicationTitle,year)
PUB6<-dplyr::rename(dplyr::count(PUB5, parentPublicationTitle,year), Freq = n)
PUB7<-dplyr::mutate(PUB6,project_id=proj_id)
colnames(PUB7)<-c("Title","year","freq_per_year","project_id")
PUB8<-dplyr::select(PUB7,project_id,Title,year,freq_per_year)
PUB8$Title<-tolower(PUB8$Title)
PUB8$Title<-gsub("&","and",PUB8$Title)
JOURNAL_DATA<-base::get("JOURNAL_DATA")
PUB9<-dplyr::left_join(PUB8,JOURNAL_DATA, by=c("Title","year"))
PUB10<-dplyr::mutate(PUB9,SJR_mult_freq=SJR*freq_per_year)
PUB11<-dplyr::mutate(PUB10,H_index_mult_freq=H_index*freq_per_year)
if (length(PUB11$project_id)==0){
PUB11<-data.frame(project_id=proj_id,
Title=NA,
year=NA,
freq_per_year=0,
H_index=0,
SJR=0,
SJR_mult_freq=0,
H_index_mult_freq=0)
}else{
PUB11<-PUB11}
}else if(COL_PUB==FALSE& EMP==TRUE){
PUB11<-data.frame(project_id=proj_id,
Title=NA,
year=NA,
freq_per_year=0,
H_index=0,
SJR=0,
SJR_mult_freq=0,
H_index_mult_freq=0)
}else{
PUB2<-dplyr::filter(PUB,!is.na(parentPublicationTitle))
PUB3<-dplyr::select(PUB2,parentPublicationTitle,date)
PUB4<-dplyr::mutate(PUB3,year=lubridate::year(PUB3$date))
PUB5<-dplyr::group_by(PUB4,parentPublicationTitle,year)
PUB6<-dplyr::rename(dplyr::count(PUB5, parentPublicationTitle,year), Freq = n)
PUB7<-dplyr::mutate(PUB6,project_id=proj_id)
colnames(PUB7)<-c("Title","year","freq_per_year","project_id")
PUB8<-dplyr::select(PUB7,project_id,Title,year,freq_per_year)
PUB8$Title<-tolower(PUB8$Title)
PUB8$Title<-gsub("&","and",PUB8$Title)
JOURNAL_DATA<-base::get("JOURNAL_DATA")
PUB9<-dplyr::left_join(PUB8,JOURNAL_DATA, by=c("Title","year"))
PUB10<-dplyr::mutate(PUB9,SJR_mult_freq=SJR*freq_per_year)
PUB11<-dplyr::mutate(PUB10,H_index_mult_freq=H_index*freq_per_year)
if (length(PUB11$project_id)==0){
PUB11<-data.frame(project_id=proj_id,
Title=NA,
year=NA,
freq_per_year=0,
H_index=0,
SJR=0,
SJR_mult_freq=0,
H_index_mult_freq=0)
}else{
PUB11<-PUB11
}
}
View(PUB11)
library(GtR)
url<-"https://gtr.ukri.org:443/projects?ref=NE/M008339/1"
firmTEST<-httr::GET(url)
firmTEXT<-httr::content(firmTEST, as="text")
JLfirm<-jsonlite::fromJSON(firmTEXT, flatten=TRUE)
ORG<-JLfirm$projectOverview$projectComposition
proj_id<-ORG$project$grantReference
pt<-ORG$project$title
imp<-ORG$project$output
PUB<-ORG$project$publication
View(PUB)
COL_PUB<- "parentPublicationTitle" %in% colnames(PUB)
EMP<-purrr::is_empty(PUB)
(COL_PUB==FALSE& EMP==FALSE)
PUB<-dplyr::mutate(PUB,parentPublicationTitle=NA)
PUB2<-dplyr::filter(PUB,!is.na(parentPublicationTitle))
PUB3<-dplyr::select(PUB2,parentPublicationTitle,date)
PUB4<-dplyr::mutate(PUB3,year=lubridate::year(PUB3$date))
PUB5<-dplyr::group_by(PUB4,parentPublicationTitle,year)
library(GtR)
