)
DF6<-unique(DF6)
library(GtR)
url<-"https://gtr.ukri.org:443/projects?ref=EP/N021479/1"
firmTEST<-httr::GET(url)
firmTEXT<-httr::content(firmTEST, as="text")
JLfirm<-jsonlite::fromJSON(firmTEXT, flatten=TRUE)
ORG<-JLfirm$projectOverview$projectComposition
pt<-ORG$project$title
pti<-ORG$project$id
imp<-ORG$project$output
imp_df<-purrr::map_df(imp,data.frame)
purrr::is_empty(imp_df)
imp_df<-dplyr::mutate(project=pt,project_id=pti)
pti<-ORG$project$id
View(imp_df)
imp_df<-dplyr::mutate(imp_df,project=pt,project_id=pti)
gc()
library(GtR)
library(GtR)
url<-"https://gtr.ukri.org:443/projects?ref=EP/K000446/1"
firmTEST<-httr::GET(url)
firmTEXT<-httr::content(firmTEST, as="text")
JLfirm<-jsonlite::fromJSON(firmTEXT, flatten=TRUE)
PUB_DF<-gtr_pub_df(url)
library(GtR)
PUB_DF<-gtr_pub_df(url)
TEST<-dplyr::ungroup(PUB_DF)
project_id<-unique(TEST$project_id)
View(TEST)
View(PUB_DF)
TOT<-sum(TEST$freq_per_year)
library(GtR)
url<-"https://gtr.ukri.org:443/projects?ref=EP/K000446/1"
library(GtR)
IP_DATA<-gtr_ip(url)
firmTEST<-httr::GET(url)
firmTEXT<-httr::content(firmTEST, as="text")
JLfirm<-jsonlite::fromJSON(firmTEXT, flatten=TRUE)
ORG<-JLfirm$projectOverview$projectComposition
proj_id<-ORG$project$grantReference
imp<-ORG$project$output
ip_df<-imp$intellectualPropertyOutput
ip_df<-dplyr::mutate(ip_df,project_id=proj_id,
ip_category=protection)
imp<-ORG$project$output
View(imp)
ip_df<-imp$intellectualPropertyOutput
library(purrr)
CHECK<-purrr::is_empty(ip_df)
firmTEST<-httr::GET(url)
firmTEXT<-httr::content(firmTEST, as="text")
JLfirm<-jsonlite::fromJSON(firmTEXT, flatten=TRUE)
ORG<-JLfirm$projectOverview$projectComposition
proj_id<-ORG$project$grantReference
imp<-ORG$project$output
ip_df<-imp$intellectualPropertyOutput
CHECK<-purrr::is_empty(ip_df)
if (CHECK==TRUE){
ip_df<-data.frame(project_id=proj_id,
ip_category=NA,
description=NA,
protection=NA,
yearProtectionGranted=NA,
licensed=NA,
patent_id=NA)
}else{
ip_df<-dplyr::mutate(ip_df,project_id=proj_id,
ip_category=protection)
patent_id<-ip_df$patentId
HHH<-colnames(ip_df)
YC<-"yearProtectionGranted" %in% HHH
LEN<-length(ip_df$id)
NA_info<-rep(NA,LEN)
if (YC==FALSE){
ip_df<-dplyr::mutate(ip_df,yearProtectionGranted=NA_info)
}else{
ip_df<-ip_df
}
DC<-"description"%in%HHH
if (DC==FALSE){
ip_df<-dplyr::mutate(ip_df,description=NA_info)
}else{
ip_df<-ip_df
}
ip_df<-dplyr::select(ip_df,project_id,ip_category,
description,protection,yearProtectionGranted,
licensed)
PC<-purrr::is_empty(patent_id)
if (PC==TRUE){
patent_id_data<-rep(NA,length(ip_df$project_id))
}else{
patent_id_data<-patent_id
}
ip_df<-dplyr::mutate(ip_df,patent_id=patent_id_data)
}
View(ip_df)
library(GtR)
library(GtR)
url<-"https://gtr.ukri.org:443/projects?ref=EP/K000446/1"
IP_DATA<-gtr_ip(url)
View(IP_DATA)
CHECK<-is.na(IP_DATA$ip_category)
library(GtR)
url<-"https://gtr.ukri.org:443/projects?ref=EP/P010237/1"
library(GtR)
PUB_DF<-gtr_pub_df(url)
firmTEST<-httr::GET(url)
firmTEXT<-httr::content(firmTEST, as="text")
JLfirm<-jsonlite::fromJSON(firmTEXT, flatten=TRUE)
ORG<-JLfirm$projectOverview$projectComposition
proj_id<-ORG$project$grantReference
pt<-ORG$project$title
imp<-ORG$project$output
PUB<-ORG$project$publication
PUB2<-dplyr::filter(PUB,!is.na(parentPublicationTitle))
View(PUB)
url
COL_PUB<-colnames(PUB)
COL_PUB<- "parentPublicationTitle" %in% colnames(PUB)
PUB$date
YL<-lubridate::year(PUB$date)
YL2<-table(YL)
YL2<-as.vector(table(YL))
firmTEST<-httr::GET(url)
firmTEXT<-httr::content(firmTEST, as="text")
JLfirm<-jsonlite::fromJSON(firmTEXT, flatten=TRUE)
ORG<-JLfirm$projectOverview$projectComposition
proj_id<-ORG$project$grantReference
pt<-ORG$project$title
imp<-ORG$project$output
PUB<-ORG$project$publication
COL_PUB<- "parentPublicationTitle" %in% colnames(PUB)
if (COL_PUB==FALSE){
PUB<-dplyr::mutate(PUB,is.na(parentPublicationTitle))
}else{
PUB2<-dplyr::filter(PUB,!is.na(parentPublicationTitle))
PUB3<-dplyr::select(PUB2,parentPublicationTitle,date)
PUB4<-dplyr::mutate(PUB3,year=lubridate::year(PUB3$date))
PUB5<-dplyr::group_by(PUB4,parentPublicationTitle,year)
PUB6<-dplyr::rename(dplyr::count(PUB5, parentPublicationTitle,year), Freq = n)
PUB7<-dplyr::mutate(PUB6,project_id=proj_id)
colnames(PUB7)<-c("Title","year","freq_per_year","project_id")
PUB8<-dplyr::select(PUB7,project_id,Title,year,freq_per_year)
PUB8$Title<-tolower(PUB8$Title)
PUB8$Title<-gsub("&","and",PUB8$Title)
JOURNAL_DATA<-base::get("JOURNAL_DATA")
PUB9<-dplyr::left_join(PUB8,JOURNAL_DATA, by=c("Title","year"))
PUB10<-dplyr::mutate(PUB9,SJR_mult_freq=SJR*freq_per_year)
PUB11<-dplyr::mutate(PUB10,H_index_mult_freq=H_index*freq_per_year)
}
firmTEST<-httr::GET(url)
firmTEXT<-httr::content(firmTEST, as="text")
JLfirm<-jsonlite::fromJSON(firmTEXT, flatten=TRUE)
ORG<-JLfirm$projectOverview$projectComposition
proj_id<-ORG$project$grantReference
pt<-ORG$project$title
imp<-ORG$project$output
PUB<-ORG$project$publication
COL_PUB<- "parentPublicationTitle" %in% colnames(PUB)
if (COL_PUB==FALSE){
PUB<-dplyr::mutate(PUB,parentPublicationTitle=NA)
}else{
PUB2<-dplyr::filter(PUB,!is.na(parentPublicationTitle))
PUB3<-dplyr::select(PUB2,parentPublicationTitle,date)
PUB4<-dplyr::mutate(PUB3,year=lubridate::year(PUB3$date))
PUB5<-dplyr::group_by(PUB4,parentPublicationTitle,year)
PUB6<-dplyr::rename(dplyr::count(PUB5, parentPublicationTitle,year), Freq = n)
PUB7<-dplyr::mutate(PUB6,project_id=proj_id)
colnames(PUB7)<-c("Title","year","freq_per_year","project_id")
PUB8<-dplyr::select(PUB7,project_id,Title,year,freq_per_year)
PUB8$Title<-tolower(PUB8$Title)
PUB8$Title<-gsub("&","and",PUB8$Title)
JOURNAL_DATA<-base::get("JOURNAL_DATA")
PUB9<-dplyr::left_join(PUB8,JOURNAL_DATA, by=c("Title","year"))
PUB10<-dplyr::mutate(PUB9,SJR_mult_freq=SJR*freq_per_year)
PUB11<-dplyr::mutate(PUB10,H_index_mult_freq=H_index*freq_per_year)
}
firmTEST<-httr::GET(url)
firmTEXT<-httr::content(firmTEST, as="text")
JLfirm<-jsonlite::fromJSON(firmTEXT, flatten=TRUE)
ORG<-JLfirm$projectOverview$projectComposition
proj_id<-ORG$project$grantReference
pt<-ORG$project$title
imp<-ORG$project$output
PUB<-ORG$project$publication
COL_PUB<- "parentPublicationTitle" %in% colnames(PUB)
if (COL_PUB==FALSE){
PUB<-dplyr::mutate(PUB,parentPublicationTitle=NA)
}else{PUB<-PUB}
PUB2<-dplyr::filter(PUB,!is.na(parentPublicationTitle))
PUB3<-dplyr::select(PUB2,parentPublicationTitle,date)
PUB4<-dplyr::mutate(PUB3,year=lubridate::year(PUB3$date))
PUB5<-dplyr::group_by(PUB4,parentPublicationTitle,year)
PUB6<-dplyr::rename(dplyr::count(PUB5, parentPublicationTitle,year), Freq = n)
PUB7<-dplyr::mutate(PUB6,project_id=proj_id)
colnames(PUB7)<-c("Title","year","freq_per_year","project_id")
PUB8<-dplyr::select(PUB7,project_id,Title,year,freq_per_year)
PUB8$Title<-tolower(PUB8$Title)
PUB8$Title<-gsub("&","and",PUB8$Title)
JOURNAL_DATA<-base::get("JOURNAL_DATA")
PUB9<-dplyr::left_join(PUB8,JOURNAL_DATA, by=c("Title","year"))
PUB10<-dplyr::mutate(PUB9,SJR_mult_freq=SJR*freq_per_year)
PUB11<-dplyr::mutate(PUB10,H_index_mult_freq=H_index*freq_per_year)
View(PUB11)
length(PUB11$project_id)==0
colnames(PUB11)
PUB11$project_id<-proj_id
View(PUB11)
firmTEST<-httr::GET(url)
firmTEXT<-httr::content(firmTEST, as="text")
JLfirm<-jsonlite::fromJSON(firmTEXT, flatten=TRUE)
ORG<-JLfirm$projectOverview$projectComposition
proj_id<-ORG$project$grantReference
pt<-ORG$project$title
imp<-ORG$project$output
PUB<-ORG$project$publication
COL_PUB<- "parentPublicationTitle" %in% colnames(PUB)
if (COL_PUB==FALSE){
PUB<-dplyr::mutate(PUB,parentPublicationTitle=NA)
}else{PUB<-PUB}
PUB2<-dplyr::filter(PUB,!is.na(parentPublicationTitle))
PUB3<-dplyr::select(PUB2,parentPublicationTitle,date)
PUB4<-dplyr::mutate(PUB3,year=lubridate::year(PUB3$date))
PUB5<-dplyr::group_by(PUB4,parentPublicationTitle,year)
PUB6<-dplyr::rename(dplyr::count(PUB5, parentPublicationTitle,year), Freq = n)
PUB7<-dplyr::mutate(PUB6,project_id=proj_id)
colnames(PUB7)<-c("Title","year","freq_per_year","project_id")
PUB8<-dplyr::select(PUB7,project_id,Title,year,freq_per_year)
PUB8$Title<-tolower(PUB8$Title)
PUB8$Title<-gsub("&","and",PUB8$Title)
JOURNAL_DATA<-base::get("JOURNAL_DATA")
PUB9<-dplyr::left_join(PUB8,JOURNAL_DATA, by=c("Title","year"))
PUB10<-dplyr::mutate(PUB9,SJR_mult_freq=SJR*freq_per_year)
PUB11<-dplyr::mutate(PUB10,H_index_mult_freq=H_index*freq_per_year)
if (length(PUB11$project_id)==0){
PUB11<-data.frame(project_id=proj_id,
Title=NA,
year=NA,
freq_per_year=0,
H_index=0,
SJR=0,
SJR_mult_freq=0,
H_index_mult_freq=0)
}else{
PUB11<-PUB11
}
View(PUB11)
gc()
library(GtR)
url<-"https://gtr.ukri.org:443/projects?ref=ST/L00626X/1"
firmTEST<-httr::GET(url)
firmTEXT<-httr::content(firmTEST, as="text")
JLfirm<-jsonlite::fromJSON(firmTEXT, flatten=TRUE)
ORG<-JLfirm$projectOverview$projectComposition
proj_id<-ORG$project$grantReference
pt<-ORG$project$title
imp<-ORG$project$output
PUB<-ORG$project$publication
EMP<-purrr::is_empty(PUB)
firmTEST<-httr::GET(url)
firmTEXT<-httr::content(firmTEST, as="text")
JLfirm<-jsonlite::fromJSON(firmTEXT, flatten=TRUE)
ORG<-JLfirm$projectOverview$projectComposition
proj_id<-ORG$project$grantReference
pt<-ORG$project$title
imp<-ORG$project$output
PUB<-ORG$project$publication
COL_PUB<- "parentPublicationTitle" %in% colnames(PUB)
EMP<-purrr::is_empty(PUB)
if (COL_PUB==FALSE& EMP==FALSE){
PUB<-dplyr::mutate(PUB,parentPublicationTitle=NA)
PUB2<-dplyr::filter(PUB,!is.na(parentPublicationTitle))
PUB3<-dplyr::select(PUB2,parentPublicationTitle,date)
PUB4<-dplyr::mutate(PUB3,year=lubridate::year(PUB3$date))
PUB5<-dplyr::group_by(PUB4,parentPublicationTitle,year)
PUB6<-dplyr::rename(dplyr::count(PUB5, parentPublicationTitle,year), Freq = n)
PUB7<-dplyr::mutate(PUB6,project_id=proj_id)
colnames(PUB7)<-c("Title","year","freq_per_year","project_id")
PUB8<-dplyr::select(PUB7,project_id,Title,year,freq_per_year)
PUB8$Title<-tolower(PUB8$Title)
PUB8$Title<-gsub("&","and",PUB8$Title)
JOURNAL_DATA<-base::get("JOURNAL_DATA")
PUB9<-dplyr::left_join(PUB8,JOURNAL_DATA, by=c("Title","year"))
PUB10<-dplyr::mutate(PUB9,SJR_mult_freq=SJR*freq_per_year)
PUB11<-dplyr::mutate(PUB10,H_index_mult_freq=H_index*freq_per_year)
if (length(PUB11$project_id)==0){
PUB11<-data.frame(project_id=proj_id,
Title=NA,
year=NA,
freq_per_year=0,
H_index=0,
SJR=0,
SJR_mult_freq=0,
H_index_mult_freq=0)
}else{
PUB11<-PUB11}
}else if(COL_PUB==FALSE& EMP==TRUE){
PUB11<-data.frame(project_id=proj_id,
Title=NA,
year=NA,
freq_per_year=0,
H_index=0,
SJR=0,
SJR_mult_freq=0,
H_index_mult_freq=0)
}else{
PUB2<-dplyr::filter(PUB,!is.na(parentPublicationTitle))
PUB3<-dplyr::select(PUB2,parentPublicationTitle,date)
PUB4<-dplyr::mutate(PUB3,year=lubridate::year(PUB3$date))
PUB5<-dplyr::group_by(PUB4,parentPublicationTitle,year)
PUB6<-dplyr::rename(dplyr::count(PUB5, parentPublicationTitle,year), Freq = n)
PUB7<-dplyr::mutate(PUB6,project_id=proj_id)
colnames(PUB7)<-c("Title","year","freq_per_year","project_id")
PUB8<-dplyr::select(PUB7,project_id,Title,year,freq_per_year)
PUB8$Title<-tolower(PUB8$Title)
PUB8$Title<-gsub("&","and",PUB8$Title)
JOURNAL_DATA<-base::get("JOURNAL_DATA")
PUB9<-dplyr::left_join(PUB8,JOURNAL_DATA, by=c("Title","year"))
PUB10<-dplyr::mutate(PUB9,SJR_mult_freq=SJR*freq_per_year)
PUB11<-dplyr::mutate(PUB10,H_index_mult_freq=H_index*freq_per_year)
if (length(PUB11$project_id)==0){
PUB11<-data.frame(project_id=proj_id,
Title=NA,
year=NA,
freq_per_year=0,
H_index=0,
SJR=0,
SJR_mult_freq=0,
H_index_mult_freq=0)
}else{
PUB11<-PUB11
}
}
View(PUB11)
library(GtR)
url<-"https://gtr.ukri.org:443/projects?ref=NE/M008339/1"
firmTEST<-httr::GET(url)
firmTEXT<-httr::content(firmTEST, as="text")
JLfirm<-jsonlite::fromJSON(firmTEXT, flatten=TRUE)
ORG<-JLfirm$projectOverview$projectComposition
proj_id<-ORG$project$grantReference
pt<-ORG$project$title
imp<-ORG$project$output
PUB<-ORG$project$publication
View(PUB)
COL_PUB<- "parentPublicationTitle" %in% colnames(PUB)
EMP<-purrr::is_empty(PUB)
(COL_PUB==FALSE& EMP==FALSE)
PUB<-dplyr::mutate(PUB,parentPublicationTitle=NA)
PUB2<-dplyr::filter(PUB,!is.na(parentPublicationTitle))
PUB3<-dplyr::select(PUB2,parentPublicationTitle,date)
PUB4<-dplyr::mutate(PUB3,year=lubridate::year(PUB3$date))
PUB5<-dplyr::group_by(PUB4,parentPublicationTitle,year)
library(GtR)
library(igraph)
g <- make_full_bipartite_graph(10,5)
ecount(g)
sample(1:5, 50, replace=FALSE)
sample(1:5, 50, replace=TRUE)
e(g)£weight<-sample(1:5, 50, replace=TRUE)
e(g)$weight<-sample(1:5, 50, replace=TRUE)
E(g)$weight<-sample(1:5, 50, replace=TRUE)
DF<-get.data.frame(g,what="edges")
View(DF)
vcount(g)
V(g)$name<-LETTERS[1:15]
g <- make_full_bipartite_graph(10,5)
V(g)$name<-LETTERS[1:15]
ecount(g)
E(g)$weight<-sample(1:5, 50, replace=TRUE)
DF<-get.data.frame(g,what="edges")
View(DF)
colnames(DF)<-c("node1","node2","value")
View(DF)
NODE2_list<-unique(DF$node2)
NODE2_list<-unique(DF$node1)
NODE2_list<-unique(DF$node2)
DF_LINK<-list()
event<-NODE2_list[[i]]
i<-1
event<-NODE2_list[[i]]
DF1<-dplyr::filter(DF,DF$node2==event)
View(DF1)
tmg<-igraph::graph_from_data_frame(DF1)
bi_map<-igraph::bipartite_mapping(tmg)
igraph::V(tmg)$type <- bi_map$type
proj2 <- igraph::bipartite_projection(tmg)
org_gs<-proj2$proj1
org_df<-igraph::get.data.frame(org_gs,what="edges")
View(org_df)
VAL<-DF1$value[[1]]
WL<-length(org_df$weight)
org_df$weight<-rep(VAL,WL)
order_link<-list()
j<-1
for (j in 1:length(org_df$from)){
DFT<-org_df[j,]
FL1<-DFT$from
FL2<-DFT$to
TESTalp<-FL1<FL2
if(TESTalp==TRUE){
link_df<-dplyr::tibble(NODE1=DFT[,1],
NODE2=DFT[,2],
WEIGHT=DFT[,3])
}else{
link_df<-dplyr::tibble(NODE1=DFT[,2],
NODE2=DFT[,1],
WEIGHT=DFT[,3])
}
order_link[[j]]<-link_df
}
DFT<-org_df[j,]
View(DFT)
FL1<-DFT$from
FL2<-DFT$to
TESTalp<-FL1<FL2
link_df<-dplyr::tibble(NODE1=DFT[,1],
NODE2=DFT[,2],
WEIGHT=DFT[,3])
View(link_df)
proj2 <- igraph::bipartite_projection(tmg)
org_gs<-proj2$proj1
org_df<-igraph::get.data.frame(org_gs,what="edges")
VAL<-DF1$value[[1]]
WL<-length(org_df$weight)
org_df$weight<-rep(VAL,WL)
View(org_df)
DFT<-org_df[j,]
FL1<-DFT$from
FL2<-DFT$to
TESTalp<-FL1<FL2
LINK_LIST_DATAFRAME<-purrr::map_df(DF_LINK,data.frame)
colnames(DF)<-c("node1","node2","value")
NODE2_list<-unique(DF$node2)
DF_LINK<-list()
for (i in 1:length(NODE2_list)){
event<-NODE2_list[[i]]
DF1<-dplyr::filter(DF,DF$node2==event)
if(length(unique(DF1$node1))>1){
tmg<-igraph::graph_from_data_frame(DF1)
bi_map<-igraph::bipartite_mapping(tmg)
igraph::V(tmg)$type <- bi_map$type
proj2 <- igraph::bipartite_projection(tmg)
org_gs<-proj2$proj1
org_df<-igraph::get.data.frame(org_gs,what="edges")
VAL<-DF1$value[[1]]
WL<-length(org_df$weight)
org_df$weight<-rep(VAL,WL)
order_link<-list()
for (j in 1:length(org_df$from)){
DFT<-org_df[j,]
FL1<-DFT$from
FL2<-DFT$to
TESTalp<-FL1<FL2
if(TESTalp==TRUE){
link_df<-dplyr::tibble(NODE1=DFT[,1],
NODE2=DFT[,2],
WEIGHT=DFT[,3])
}else{
link_df<-dplyr::tibble(NODE1=DFT[,2],
NODE2=DFT[,1],
WEIGHT=DFT[,3])
}
order_link[[j]]<-link_df
}
LL<-purrr::map_df(order_link,data.frame)
}else{
LL<-NULL
}
DF_LINK[[i]]<-LL
}
LINK_LIST_DATAFRAME<-purrr::map_df(DF_LINK,data.frame)
View(LINK_LIST_DATAFRAME)
LLDF<-dplyr::mutate(LINK_LIST_DATAFRAME,
COMB=paste0(LINK_LIST_DATAFRAME$NODE1,"_",LINK_LIST_DATAFRAME$NODE2))
LLDF2<-dplyr::group_by(LLDF,COMB)
LLDF3<-dplyr::summarise(LLDF2,Frequency = sum(WEIGHT))
colnames(LLDF3)<-c("COMB","Frequency")
LLDF4<-stringr::str_split_fixed(LLDF3$COMB, "_", 2)
LLDF5<-as.data.frame(LLDF4,stringsAsFactors = FALSE)
colnames(LLDF5)<-c("NODE1","NODE2")
LLDF6<-dplyr::mutate(LLDF5,WEIGHT=LLDF3$Frequency)
View(LLDF6)
LINK_LIST_DATAFRAME<-purrr::map_df(DF_LINK,data.frame)
LLDF2<-dplyr::group_by(LLDF,NODE1,NODE2)
LLDF3<-dplyr::summarise(LLDF2,Frequency = sum(WEIGHT))
url<-"https://gtr.ukri.org/projects?ref=ST%2FK000233%2F1"
firmTEST<-httr::GET(url)
firmTEXT<-httr::content(firmTEST, as="text")
JLfirm<-jsonlite::fromJSON(firmTEXT, flatten=TRUE)
ORG<-JLfirm$projectOverview$projectComposition
proj_id<-ORG$project$grantReference
imp<-ORG$project$output
spin_df<-imp$spinOutOutput
CHECK<-purrr::is_empty(ip_df)
CHECK<-purrr::is_empty(spin_df)
SPIN<-dplyr::mutate(spin_df,project_id=proj_id)
View(SPIN)
spin_off_id<-SPIN$id
HHH<-colnames(SPIN)
CHECK<-purrr::is_empty(spin_df)
CHECK
if(CHECK==TRUE){
SPIN_RES<-0
}else{
SPIN_RES<-1
}
SPIN_RES_DF<-data.frame(project_id=proj_id,
spin_out=SPIN_RES)
gc()
library(GtR)
